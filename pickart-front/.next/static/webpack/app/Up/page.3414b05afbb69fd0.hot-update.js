/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/Up/page",{

/***/ "(app-pages-browser)/./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?modules=%7B%22request%22%3A%22C%3A%5C%5CUsers%5C%5CPC%5C%5CDesktop%5C%5CPickArt%5C%5Cpickart-front%5C%5Csrc%5C%5Capp%5C%5CUp%5C%5Cpage.tsx%22%2C%22ids%22%3A%5B%5D%7D&server=false!":
/*!*****************************************************************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?modules=%7B%22request%22%3A%22C%3A%5C%5CUsers%5C%5CPC%5C%5CDesktop%5C%5CPickArt%5C%5Cpickart-front%5C%5Csrc%5C%5Capp%5C%5CUp%5C%5Cpage.tsx%22%2C%22ids%22%3A%5B%5D%7D&server=false! ***!
  \*****************************************************************************************************************************************************************************************************************************************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

eval(__webpack_require__.ts("Promise.resolve(/*! import() eager */).then(__webpack_require__.t.bind(__webpack_require__, /*! ./src/app/Up/page.tsx */ \"(app-pages-browser)/./src/app/Up/page.tsx\", 23));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvYnVpbGQvd2VicGFjay9sb2FkZXJzL25leHQtZmxpZ2h0LWNsaWVudC1lbnRyeS1sb2FkZXIuanM/bW9kdWxlcz0lN0IlMjJyZXF1ZXN0JTIyJTNBJTIyQyUzQSU1QyU1Q1VzZXJzJTVDJTVDUEMlNUMlNUNEZXNrdG9wJTVDJTVDUGlja0FydCU1QyU1Q3BpY2thcnQtZnJvbnQlNUMlNUNzcmMlNUMlNUNhcHAlNUMlNUNVcCU1QyU1Q3BhZ2UudHN4JTIyJTJDJTIyaWRzJTIyJTNBJTVCJTVEJTdEJnNlcnZlcj1mYWxzZSEiLCJtYXBwaW5ncyI6IkFBQUEsMEtBQTJHIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8/MzIxZiJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQoLyogd2VicGFja01vZGU6IFwiZWFnZXJcIiAqLyBcIkM6XFxcXFVzZXJzXFxcXFBDXFxcXERlc2t0b3BcXFxcUGlja0FydFxcXFxwaWNrYXJ0LWZyb250XFxcXHNyY1xcXFxhcHBcXFxcVXBcXFxccGFnZS50c3hcIik7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?modules=%7B%22request%22%3A%22C%3A%5C%5CUsers%5C%5CPC%5C%5CDesktop%5C%5CPickArt%5C%5Cpickart-front%5C%5Csrc%5C%5Capp%5C%5CUp%5C%5Cpage.tsx%22%2C%22ids%22%3A%5B%5D%7D&server=false!\n"));

/***/ }),

/***/ "(app-pages-browser)/./src/app/Up/page.tsx":
/*!*****************************!*\
  !*** ./src/app/Up/page.tsx ***!
  \*****************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval(__webpack_require__.ts("// const multer = require('multer');\n// const fs = require('fs/promises');\n// // const path = require('path');\n// const upload = multer({ dest: '/tmp/' });\n// app.post('/UpLoad', verifyUserToken, upload.single('file'), async (req, res) => {\n//   if (!req.file) {\n//     return res.status(400).json({ success: false });\n//   }\n//   try {\n//     const filePath = req.file.path;\n//     const fileBuffer = await fs.readFile(filePath);\n//     const folderPath = path.join(__dirname, './public/ServerDisk/');\n//     // Check if a file with the same name and size already exists\n//     let existingFilePath = req.file.originalname;\n//     console.log(\"ExPathStart \",existingFilePath);\n//     try {\n//       // await fs.stat(folderPath+existingFilePath);\n//       // If the file already exists, increment the file name and try again\n//       let index = 1;\n//       while (await fs.stat(path.join(folderPath, existingFilePath))) {\n//         const fileExtension = path.extname(req.file.originalname);\n//         const fileNameWithoutExtension = path.basename(req.file.originalname, fileExtension);\n//         existingFilePath = `${fileNameWithoutExtension}-${index}${fileExtension}`;\n//         index++;\n//         console.log(\"ExPath \",existingFilePath);\n//       }\n//       console.log(\"ExPathWrite \",existingFilePath);\n//       req.file.originalname=existingFilePath;\n//     } catch (err) {\n//       // File does not exist, proceed with upload\n//       console.log(\"eror \",err);\n//     }\n//     console.log(\"write\", req.file.originalname);\n//     await fs.writeFile(folderPath+req.file.originalname, fileBuffer);\n//     await fs.unlink(filePath); // Remove the temporary file\n//     await mysql.query(\n//       `INSERT INTO artwork (Title, FileName, AuthorId, Description) VALUES (?, ?, ?, ?)`,\n//       [req.body.Title, req.file.originalname, req.user.Id, req.body.Description]\n//     );\n//     return res.sendStatus(200);\n//   } catch (error) {\n//     console.log(error);\n//     res.sendStatus(500);\n//   }\n// });\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL3NyYy9hcHAvVXAvcGFnZS50c3giLCJtYXBwaW5ncyI6IkFBQUEsb0NBQW9DO0FBQ3BDLHFDQUFxQztBQUNyQyxtQ0FBbUM7QUFFbkMsNENBQTRDO0FBRTVDLG9GQUFvRjtBQUNwRixxQkFBcUI7QUFDckIsdURBQXVEO0FBQ3ZELE1BQU07QUFDTixVQUFVO0FBQ1Ysc0NBQXNDO0FBQ3RDLHNEQUFzRDtBQUN0RCx1RUFBdUU7QUFFdkUsb0VBQW9FO0FBQ3BFLG9EQUFvRDtBQUNwRCxvREFBb0Q7QUFDcEQsWUFBWTtBQUNaLHVEQUF1RDtBQUN2RCw2RUFBNkU7QUFDN0UsdUJBQXVCO0FBQ3ZCLHlFQUF5RTtBQUN6RSxxRUFBcUU7QUFDckUsZ0dBQWdHO0FBQ2hHLHFGQUFxRjtBQUNyRixtQkFBbUI7QUFDbkIsbURBQW1EO0FBQ25ELFVBQVU7QUFDVixzREFBc0Q7QUFDdEQsZ0RBQWdEO0FBQ2hELHNCQUFzQjtBQUN0QixvREFBb0Q7QUFDcEQsa0NBQWtDO0FBQ2xDLFFBQVE7QUFDUixtREFBbUQ7QUFFbkQsd0VBQXdFO0FBRXhFLDhEQUE4RDtBQUM5RCx5QkFBeUI7QUFDekIsNEZBQTRGO0FBQzVGLG1GQUFtRjtBQUNuRixTQUFTO0FBQ1Qsa0NBQWtDO0FBQ2xDLHNCQUFzQjtBQUN0QiwwQkFBMEI7QUFDMUIsMkJBQTJCO0FBQzNCLE1BQU07QUFDTixNQUFNIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL3NyYy9hcHAvVXAvcGFnZS50c3g/Y2JkMCJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBjb25zdCBtdWx0ZXIgPSByZXF1aXJlKCdtdWx0ZXInKTtcclxuLy8gY29uc3QgZnMgPSByZXF1aXJlKCdmcy9wcm9taXNlcycpO1xyXG4vLyAvLyBjb25zdCBwYXRoID0gcmVxdWlyZSgncGF0aCcpO1xyXG5cclxuLy8gY29uc3QgdXBsb2FkID0gbXVsdGVyKHsgZGVzdDogJy90bXAvJyB9KTtcclxuXHJcbi8vIGFwcC5wb3N0KCcvVXBMb2FkJywgdmVyaWZ5VXNlclRva2VuLCB1cGxvYWQuc2luZ2xlKCdmaWxlJyksIGFzeW5jIChyZXEsIHJlcykgPT4ge1xyXG4vLyAgIGlmICghcmVxLmZpbGUpIHtcclxuLy8gICAgIHJldHVybiByZXMuc3RhdHVzKDQwMCkuanNvbih7IHN1Y2Nlc3M6IGZhbHNlIH0pO1xyXG4vLyAgIH1cclxuLy8gICB0cnkge1xyXG4vLyAgICAgY29uc3QgZmlsZVBhdGggPSByZXEuZmlsZS5wYXRoO1xyXG4vLyAgICAgY29uc3QgZmlsZUJ1ZmZlciA9IGF3YWl0IGZzLnJlYWRGaWxlKGZpbGVQYXRoKTtcclxuLy8gICAgIGNvbnN0IGZvbGRlclBhdGggPSBwYXRoLmpvaW4oX19kaXJuYW1lLCAnLi9wdWJsaWMvU2VydmVyRGlzay8nKTtcclxuXHJcbi8vICAgICAvLyBDaGVjayBpZiBhIGZpbGUgd2l0aCB0aGUgc2FtZSBuYW1lIGFuZCBzaXplIGFscmVhZHkgZXhpc3RzXHJcbi8vICAgICBsZXQgZXhpc3RpbmdGaWxlUGF0aCA9IHJlcS5maWxlLm9yaWdpbmFsbmFtZTtcclxuLy8gICAgIGNvbnNvbGUubG9nKFwiRXhQYXRoU3RhcnQgXCIsZXhpc3RpbmdGaWxlUGF0aCk7XHJcbi8vICAgICB0cnkge1xyXG4vLyAgICAgICAvLyBhd2FpdCBmcy5zdGF0KGZvbGRlclBhdGgrZXhpc3RpbmdGaWxlUGF0aCk7XHJcbi8vICAgICAgIC8vIElmIHRoZSBmaWxlIGFscmVhZHkgZXhpc3RzLCBpbmNyZW1lbnQgdGhlIGZpbGUgbmFtZSBhbmQgdHJ5IGFnYWluXHJcbi8vICAgICAgIGxldCBpbmRleCA9IDE7XHJcbi8vICAgICAgIHdoaWxlIChhd2FpdCBmcy5zdGF0KHBhdGguam9pbihmb2xkZXJQYXRoLCBleGlzdGluZ0ZpbGVQYXRoKSkpIHtcclxuLy8gICAgICAgICBjb25zdCBmaWxlRXh0ZW5zaW9uID0gcGF0aC5leHRuYW1lKHJlcS5maWxlLm9yaWdpbmFsbmFtZSk7XHJcbi8vICAgICAgICAgY29uc3QgZmlsZU5hbWVXaXRob3V0RXh0ZW5zaW9uID0gcGF0aC5iYXNlbmFtZShyZXEuZmlsZS5vcmlnaW5hbG5hbWUsIGZpbGVFeHRlbnNpb24pO1xyXG4vLyAgICAgICAgIGV4aXN0aW5nRmlsZVBhdGggPSBgJHtmaWxlTmFtZVdpdGhvdXRFeHRlbnNpb259LSR7aW5kZXh9JHtmaWxlRXh0ZW5zaW9ufWA7XHJcbi8vICAgICAgICAgaW5kZXgrKztcclxuLy8gICAgICAgICBjb25zb2xlLmxvZyhcIkV4UGF0aCBcIixleGlzdGluZ0ZpbGVQYXRoKTtcclxuLy8gICAgICAgfVxyXG4vLyAgICAgICBjb25zb2xlLmxvZyhcIkV4UGF0aFdyaXRlIFwiLGV4aXN0aW5nRmlsZVBhdGgpO1xyXG4vLyAgICAgICByZXEuZmlsZS5vcmlnaW5hbG5hbWU9ZXhpc3RpbmdGaWxlUGF0aDtcclxuLy8gICAgIH0gY2F0Y2ggKGVycikge1xyXG4vLyAgICAgICAvLyBGaWxlIGRvZXMgbm90IGV4aXN0LCBwcm9jZWVkIHdpdGggdXBsb2FkXHJcbi8vICAgICAgIGNvbnNvbGUubG9nKFwiZXJvciBcIixlcnIpO1xyXG4vLyAgICAgfVxyXG4vLyAgICAgY29uc29sZS5sb2coXCJ3cml0ZVwiLCByZXEuZmlsZS5vcmlnaW5hbG5hbWUpO1xyXG5cclxuLy8gICAgIGF3YWl0IGZzLndyaXRlRmlsZShmb2xkZXJQYXRoK3JlcS5maWxlLm9yaWdpbmFsbmFtZSwgZmlsZUJ1ZmZlcik7XHJcblxyXG4vLyAgICAgYXdhaXQgZnMudW5saW5rKGZpbGVQYXRoKTsgLy8gUmVtb3ZlIHRoZSB0ZW1wb3JhcnkgZmlsZVxyXG4vLyAgICAgYXdhaXQgbXlzcWwucXVlcnkoXHJcbi8vICAgICAgIGBJTlNFUlQgSU5UTyBhcnR3b3JrIChUaXRsZSwgRmlsZU5hbWUsIEF1dGhvcklkLCBEZXNjcmlwdGlvbikgVkFMVUVTICg/LCA/LCA/LCA/KWAsXHJcbi8vICAgICAgIFtyZXEuYm9keS5UaXRsZSwgcmVxLmZpbGUub3JpZ2luYWxuYW1lLCByZXEudXNlci5JZCwgcmVxLmJvZHkuRGVzY3JpcHRpb25dXHJcbi8vICAgICApO1xyXG4vLyAgICAgcmV0dXJuIHJlcy5zZW5kU3RhdHVzKDIwMCk7XHJcbi8vICAgfSBjYXRjaCAoZXJyb3IpIHtcclxuLy8gICAgIGNvbnNvbGUubG9nKGVycm9yKTtcclxuLy8gICAgIHJlcy5zZW5kU3RhdHVzKDUwMCk7XHJcbi8vICAgfVxyXG4vLyB9KTsiXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/app/Up/page.tsx\n"));

/***/ })

});